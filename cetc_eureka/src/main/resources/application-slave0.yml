server:
  port: 9800 #服务端口

eureka:
  server:
    wait-time-in-ms-when-sync-empty: 0   #在eureka服务器获取不到集群里对等服务器上的实例时，需要等待的时间，单机默认0
    shouldUseReadOnlyResponseCache: true #eureka是CAP理论种基于AP策略，为了保证强一致性关闭此切换CP 默认不关闭 false关闭
    enable-self-preservation: true    #关闭服务器自我保护，客户端心跳检测15分钟内错误达到80%服务会保护，导致别人还认为是好用的服务
    eviction-interval-timer-in-ms: 60000 #清理间隔（单位毫秒，默认是60*1000）5秒将客户端剔除的服务在服务注册列表中剔除#
    response-cache-update-interval-ms: 3000  #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上 #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上默认30s
    response-cache-auto-expiration-in-seconds: 180   #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    renewal-percent-threshold: 0.49  #  指定每分钟需要收到的续约次数的阈值，默认值就是：0.85
  instance:
    prefer-ip-address: true   #prefer-ip-address设置为true以IP地址注册到服务中心，相互注册使用IP地址
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 2    # 续约更新时间间隔（默认30秒），eureka客户端向服务端发送心跳的时间间隔
    lease-expiration-duration-in-seconds: 30 # 续约到期时间（默认90秒）
  client:
    registerWithEureka: true #是否将自己注册到Eureka服务中，本身就是所有无需注册
    fetchRegistry: false #缓存服务清单
    registry-fetch-interval-seconds: 30  #从eureka服务端获取注册信息的间隔时间
    service-url:
      defaultZone: http://cetc-eureka:9800/eureka

#暴露监控端点
management:
  health:                                 #Springboot不支持6版本以上的ES检查，解决健康检查ES的报错问题
    elasticsearch:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:                                #此配置代表查看详细的健康信息
    health:
      show-details: always